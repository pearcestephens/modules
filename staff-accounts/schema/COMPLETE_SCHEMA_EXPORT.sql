Table	Create Table
users	CREATE TABLE `users` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `first_name` mediumtext NOT NULL COMMENT 'The first name of the user for identification and personalization in the system.',\n  `last_name` mediumtext NOT NULL COMMENT 'The family name of the user for identification and communication purposes.',\n  `email` mediumtext NOT NULL COMMENT 'Stores the user''s email address for communication and login purposes.',\n  `password` mediumtext NOT NULL,\n  `phone` mediumtext NOT NULL COMMENT 'Contact number for reaching the user directly for business communications.',\n  `image` mediumtext DEFAULT NULL COMMENT 'Stores the URL or path to the user''s profile picture for identification.',\n  `last_active` timestamp NULL DEFAULT NULL COMMENT 'Indicates the last time the user accessed the system for activity tracking.',\n  `default_outlet` mediumtext DEFAULT NULL COMMENT 'The primary store location assigned to a user for their transactions and activities.',\n  `role_id` int(11) NOT NULL COMMENT 'Identifies the user''s position or permissions within the company.',\n  `is_manager` tinyint(1) DEFAULT 0,\n  `stored_dashboard_view` mediumtext DEFAULT NULL COMMENT 'Stores the user''s preferred dashboard layout for personalized access.',\n  `xero_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier linking the user to their Xero account for financial integration.',\n  `vend_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier linking the user to their Vend account for sales and inventory management.',\n  `vend_sync_at` timestamp NULL DEFAULT NULL,\n  `deputy_id` varchar(45) DEFAULT NULL COMMENT 'Represents the unique identifier for a user''s profile in the Deputy workforce management system.',\n  `account_locked` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a user''s account is currently restricted from access.',\n  `staff_active` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if a staff member is currently employed and active in the system.',\n  `nicknames` mediumtext DEFAULT NULL COMMENT 'Alternative names or informal names used by staff members.',\n  `vend_customer_account` varchar(45) DEFAULT NULL,\n  `gpt_access` tinyint(1) DEFAULT 0 COMMENT 'Indicates if the user has permission to access GPT-related features.',\n  `gpt_admin` tinyint(1) DEFAULT 0 COMMENT 'Indicates if the user has administrative privileges for GPT-related tasks.',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `vend_id_UNIQUE` (`vend_id`),\n  UNIQUE KEY `vend_customer_account_UNIQUE` (`vend_customer_account`),\n  UNIQUE KEY `deputy_id_UNIQUE` (`deputy_id`),\n  UNIQUE KEY `xero_id_UNIQUE` (`xero_id`),\n  KEY `idx_users_vend_id` (`vend_id`),\n  KEY `idx_is_manager` (`is_manager`)\n) ENGINE=InnoDB AUTO_INCREMENT=130 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all users with access to the ERP system, used for managing user roles, permissions, and tracking user activity within the business.  \\nTags: user management, role assignment, user activity report, access permissions, staff directory, active users, inactive users, user login history, default outlet assignment, dashboard preferences.'
Table	Create Table
staff_account_reconciliation	CREATE TABLE `staff_account_reconciliation` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `user_id` int(10) unsigned DEFAULT NULL,\n  `vend_customer_id` varchar(100) NOT NULL,\n  `credit_account_id` varchar(50) DEFAULT NULL COMMENT 'Lightspeed CreditAccount ID for this customer',\n  `discount_id` varchar(50) DEFAULT NULL COMMENT 'Lightspeed Customer discount ID (if applicable)',\n  `employee_name` varchar(255) NOT NULL,\n  `total_xero_deductions` decimal(10,2) DEFAULT 0.00 COMMENT 'Total from Xero payrolls',\n  `total_allocated` decimal(10,2) DEFAULT 0.00 COMMENT 'Total allocated to Vend',\n  `pending_allocation` decimal(10,2) DEFAULT 0.00 COMMENT 'Not yet allocated',\n  `vend_balance` decimal(10,2) DEFAULT 0.00 COMMENT 'Current Vend customer balance',\n  `credit_limit` decimal(10,2) DEFAULT 0.00 COMMENT 'Max credit allowed from Lightspeed CreditAccount API (0 = unlimited)',\n  `vend_balance_updated_at` datetime DEFAULT NULL,\n  `vend_last_synced_at` datetime DEFAULT NULL COMMENT 'Last time we synced credit_limit from Lightspeed CreditAccount API',\n  `outstanding_amount` decimal(10,2) DEFAULT 0.00 COMMENT 'Balance - Allocated (what they still owe)',\n  `last_payment_date` datetime DEFAULT NULL,\n  `last_payment_amount` decimal(10,2) DEFAULT NULL,\n  `last_payment_transaction_id` varchar(100) DEFAULT NULL,\n  `total_payments_ytd` decimal(10,2) DEFAULT 0.00,\n  `status` enum('balanced','overpaid','underpaid','pending') DEFAULT 'pending',\n  `last_reconciled_at` datetime DEFAULT NULL,\n  `notes` text DEFAULT NULL,\n  `created_at` datetime DEFAULT current_timestamp(),\n  `updated_at` datetime DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `idx_vend_customer` (`vend_customer_id`),\n  KEY `idx_user` (`user_id`),\n  KEY `idx_status` (`status`),\n  KEY `idx_outstanding` (`outstanding_amount`),\n  KEY `idx_last_payment_date` (`last_payment_date`),\n  KEY `idx_credit_limit` (`credit_limit`),\n  KEY `idx_vend_last_synced` (`vend_last_synced_at`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Reconciliation between Xero and Vend'
Table	Create Table
staff_payment_plans	CREATE TABLE `staff_payment_plans` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL,\n  `total_amount` decimal(10,2) NOT NULL,\n  `installment_amount` decimal(10,2) NOT NULL,\n  `frequency` enum('weekly','fortnightly','monthly') NOT NULL,\n  `total_installments` int(11) NOT NULL,\n  `completed_installments` int(11) DEFAULT 0,\n  `next_payment_date` date NOT NULL,\n  `status` enum('active','completed','cancelled','defaulted') DEFAULT 'active',\n  `created_at` datetime DEFAULT current_timestamp(),\n  `completed_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `idx_user_id` (`user_id`),\n  KEY `idx_status` (`status`),\n  KEY `idx_next_payment` (`next_payment_date`),\n  KEY `idx_active_plans` (`user_id`,`status`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
staff_payment_plan_installments	CREATE TABLE `staff_payment_plan_installments` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `plan_id` int(11) NOT NULL,\n  `installment_number` int(11) NOT NULL,\n  `amount` decimal(10,2) NOT NULL,\n  `due_date` date NOT NULL,\n  `paid_date` datetime DEFAULT NULL,\n  `transaction_id` varchar(100) DEFAULT NULL,\n  `status` enum('pending','paid','failed','skipped') DEFAULT 'pending',\n  `created_at` datetime DEFAULT current_timestamp(),\n  PRIMARY KEY (`id`),\n  KEY `idx_plan_id` (`plan_id`),\n  KEY `idx_status` (`status`),\n  KEY `idx_due_date` (`due_date`),\n  CONSTRAINT `staff_payment_plan_installments_ibfk_1` FOREIGN KEY (`plan_id`) REFERENCES `staff_payment_plans` (`id`) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
staff_payment_transactions	CREATE TABLE `staff_payment_transactions` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL,\n  `transaction_type` enum('session_created','payment_approved','payment_failed','refund') NOT NULL,\n  `amount` decimal(10,2) NOT NULL,\n  `request_id` varchar(100) NOT NULL,\n  `response_data` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL CHECK (json_valid(`response_data`)),\n  `created_at` datetime DEFAULT current_timestamp(),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `request_id` (`request_id`),\n  KEY `idx_user_id` (`user_id`),\n  KEY `idx_created_at` (`created_at`),\n  KEY `idx_type` (`transaction_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
staff_saved_cards	CREATE TABLE `staff_saved_cards` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL,\n  `card_token` varchar(255) NOT NULL,\n  `last_four_digits` char(4) NOT NULL,\n  `card_type` varchar(20) NOT NULL,\n  `expiry_month` tinyint(4) NOT NULL,\n  `expiry_year` smallint(6) NOT NULL,\n  `is_default` tinyint(1) DEFAULT 0,\n  `is_active` tinyint(1) DEFAULT 1,\n  `created_at` datetime DEFAULT current_timestamp(),\n  `last_used_at` datetime DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `unique_user_token` (`user_id`,`card_token`),\n  KEY `idx_user_id` (`user_id`),\n  KEY `idx_is_default` (`is_default`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
staff_members	CREATE TABLE `staff_members` (\n  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n  `staff_id` varchar(50) NOT NULL,\n  `employee_number` varchar(50) DEFAULT NULL,\n  `display_name` varchar(100) NOT NULL,\n  `first_name` varchar(50) NOT NULL,\n  `last_name` varchar(50) NOT NULL,\n  `position` varchar(100) DEFAULT NULL,\n  `department` varchar(100) DEFAULT NULL,\n  `outlet_id` varchar(50) DEFAULT NULL,\n  `face_vectors` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`face_vectors`)),\n  `photos` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`photos`)),\n  `overlay_color` varchar(7) DEFAULT '#00FF00',\n  `recognition_enabled` tinyint(1) DEFAULT 1,\n  `privacy_level` enum('full','name_only','position_only','anonymous') DEFAULT 'full',\n  `status` enum('active','inactive','suspended') DEFAULT 'active',\n  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),\n  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `staff_id` (`staff_id`),\n  KEY `idx_status` (`status`),\n  KEY `idx_outlet` (`outlet_id`)\n) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
vend_customers	CREATE TABLE `vend_customers` (\n  `id` varchar(45) NOT NULL COMMENT 'Unique identifier for each customer in the database.',\n  `customer_code` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for each customer used for tracking and reference in the system.',\n  `first_name` mediumtext DEFAULT NULL COMMENT 'Stores the customer''s given name for identification and personalization in interactions.',\n  `last_name` mediumtext DEFAULT NULL COMMENT 'Stores the customer''s family name for identification and communication purposes.',\n  `email` varchar(100) DEFAULT NULL COMMENT 'Stores the customer''s email address for communication and account identification.',\n  `year_to_date` varchar(45) DEFAULT NULL COMMENT 'Total purchases made by the customer this year in monetary value.',\n  `balance` varchar(45) DEFAULT NULL COMMENT 'Outstanding amount the customer owes or credit they have with the company.',\n  `loyalty_balance` varchar(45) DEFAULT NULL COMMENT 'Points accumulated by a customer for loyalty rewards.',\n  `note` mediumtext DEFAULT NULL COMMENT 'Records important customer-related notes, such as underage or fraud alerts, for internal reference.',\n  `gender` varchar(45) DEFAULT NULL COMMENT 'Indicates the customer''s gender for personalized marketing and communication.',\n  `date_of_birth` varchar(45) DEFAULT NULL COMMENT 'Customer''s birth date for age verification and personalized marketing.',\n  `company_name` varchar(100) DEFAULT NULL COMMENT 'Stores the name of the company associated with the customer for business reference.',\n  `do_not_email` varchar(45) DEFAULT NULL COMMENT 'Indicates if a customer has opted out of receiving marketing emails.',\n  `phone` varchar(100) DEFAULT NULL COMMENT 'Primary contact number for reaching the customer.',\n  `mobile` varchar(100) DEFAULT NULL COMMENT 'Stores the customer''s mobile phone number for contact and communication purposes.',\n  `physical_suburb` varchar(45) DEFAULT NULL COMMENT 'The suburb where the customer''s physical address is located.',\n  `physical_city` varchar(45) DEFAULT NULL COMMENT 'Stores the city where the customer''s physical address is located for delivery and service purposes.',\n  `physical_postcode` varchar(45) DEFAULT NULL COMMENT 'Stores the postcode for the customer''s physical address for delivery and location-based services.',\n  `physical_state` varchar(45) DEFAULT NULL COMMENT 'Indicates the region or state where the customer''s physical address is located.',\n  `postal_suburb` varchar(45) DEFAULT NULL COMMENT 'Stores the suburb part of a customer''s postal address for mailing purposes.',\n  `postal_city` varchar(45) DEFAULT NULL COMMENT 'City for the customer''s postal address used for shipping and correspondence.',\n  `postal_state` varchar(45) DEFAULT NULL COMMENT 'The state or region for the customer''s postal address used for shipping and correspondence.',\n  `customer_group_id` varchar(45) DEFAULT NULL COMMENT 'Identifies the specific customer group for tailored marketing and sales strategies.',\n  `enable_loyalty` varchar(45) DEFAULT NULL COMMENT 'Indicates if the customer is eligible to earn loyalty points.',\n  `created_at` varchar(45) DEFAULT NULL COMMENT 'The date and time when the customer record was first created in the system.',\n  `updated_at` varchar(45) DEFAULT NULL COMMENT 'Timestamp of the last update made to the customer''s record.',\n  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Timestamp indicating when a customer record was marked as inactive or removed.',\n  `version` varchar(45) DEFAULT NULL,\n  `postal_postcode` varchar(45) DEFAULT NULL COMMENT 'Stores the postcode for the customer''s mailing address used for shipping and correspondence.',\n  `name` mediumtext DEFAULT NULL COMMENT 'Full name of the customer for identification and communication purposes.',\n  `physical_address_1` varchar(200) DEFAULT NULL COMMENT 'Stores the primary street address where the customer resides or receives deliveries.',\n  `physical_address_2` varchar(200) DEFAULT NULL COMMENT 'Additional address details for customer deliveries or correspondence.',\n  `physical_country_id` varchar(45) DEFAULT NULL COMMENT 'Stores the country code for the customer''s physical address location.',\n  `postal_address_1` varchar(200) DEFAULT NULL COMMENT 'Primary line of the customer''s mailing address for shipping and correspondence.',\n  `postal_address_2` varchar(200) DEFAULT NULL COMMENT 'Additional details for the customer''s mailing address, such as apartment or suite number.',\n  `postal_country_id` varchar(45) DEFAULT NULL COMMENT 'Stores the country code for the customer''s postal address for shipping and communication purposes.',\n  `custom_field_1` mediumtext DEFAULT NULL COMMENT 'This column stores miscellaneous customer notes or alerts for internal reference.',\n  `custom_field_2` varchar(200) DEFAULT NULL,\n  `custom_field_3` varchar(200) DEFAULT NULL,\n  `custom_field_4` varchar(200) DEFAULT NULL,\n  `website` varchar(200) DEFAULT NULL,\n  `unsubscribe_account_balance` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a customer''s account balance should be excluded from email communications.',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `id_UNIQUE` (`id`),\n  KEY `customerID` (`id`,`customer_code`,`email`),\n  KEY `vs_code_idx` (`customer_code`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all customers who have made purchases at The Vape Shed, used for tracking customer information, purchase history, and loyalty program details.  \\nTags: customer purchase history, loyalty program status, customer contact information, marketing preferences, customer demographics, sales reports, customer balance inquiries, birthday promotions, do not contact list.'
Table	Create Table
vend_sales	CREATE TABLE `vend_sales` (\n  `increment_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each sale transaction in the system.',\n  `id` varchar(36) NOT NULL COMMENT 'Unique identifier for each sale transaction in the system.',\n  `outlet_id` varchar(36) NOT NULL COMMENT 'Identifies the specific store location where the sale was made.',\n  `register_id` varchar(36) NOT NULL COMMENT 'Identifies the specific cash register used for the sale transaction.',\n  `user_id` varchar(36) NOT NULL COMMENT 'Identifies the staff member who processed the sale transaction.',\n  `customer_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the customer associated with each sale transaction.',\n  `invoice_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction invoice.',\n  `status` varchar(30) NOT NULL COMMENT 'Indicates the current progress or completion stage of a sale transaction.',\n  `note` mediumtext NOT NULL COMMENT 'Additional details or comments related to a specific sale transaction.',\n  `short_code` varchar(15) NOT NULL COMMENT 'Unique identifier for quick reference to specific sales transactions.',\n  `return_for` varchar(100) DEFAULT NULL COMMENT 'Links a sale to its original transaction when processing a return.',\n  `total_price` decimal(16,6) DEFAULT NULL COMMENT 'The total amount charged for a sale, including any discounts or returns.',\n  `total_tax` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to a sale transaction.',\n  `total_loyalty` decimal(16,6) DEFAULT NULL COMMENT 'The total loyalty points earned by the customer from this sale.',\n  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of when the sale record was initially created in the system.',\n  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of the last modification made to the sales record.',\n  `sale_date` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date and time when the sale transaction was completed.',\n  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the sale record was removed from active status.',\n  `version` bigint(100) NOT NULL,\n  `receipt_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction receipt issued to customers.',\n  `version_max` bigint(100) DEFAULT NULL,\n  `payments` longtext DEFAULT NULL,\n  `sale_date_d` date GENERATED ALWAYS AS (cast(`sale_date` as date)) STORED,\n  PRIMARY KEY (`increment_id`),\n  UNIQUE KEY `SALE_ID_INDEX` (`id`),\n  KEY `idx_user_id` (`user_id`),\n  KEY `ix_vs_outlet_date_inc` (`outlet_id`,`sale_date`,`increment_id`),\n  KEY `ix_vs_date_inc` (`sale_date`,`increment_id`),\n  KEY `ix_vs_customer_date` (`customer_id`,`sale_date`),\n  KEY `ix_vs_dateD_inc` (`sale_date_d`,`increment_id`),\n  KEY `ix_vs_outlet_dateD_inc` (`outlet_id`,`sale_date_d`,`increment_id`),\n  KEY `idx_vend_sales_performance` (`outlet_id`,`sale_date`,`status`,`total_price`),\n  KEY `idx_vend_sales_user_date_status` (`user_id`,`created_at`,`status`),\n  KEY `idx_vs_outlet_date_status` (`outlet_id`,`sale_date`,`status`),\n  KEY `idx_vs_customer_date` (`customer_id`,`sale_date`),\n  KEY `idx_vs_user_date_status` (`user_id`,`sale_date`,`status`),\n  KEY `idx_vs_increment_outlet_date` (`increment_id`,`outlet_id`,`sale_date`),\n  KEY `idx_sales_outlet_increment` (`outlet_id`,`increment_id`) USING BTREE,\n  KEY `idx_vend_sales_web_processing` (`outlet_id`,`status`,`sale_date`,`created_at`)\n) ENGINE=InnoDB AUTO_INCREMENT=1176298816 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of individual sales transactions processed through the Vend point-of-sale system, used by the business to track sales performance, manage inventory, and analyze customer purchasing behavior.  \\nTags: sales reports, transaction history, closed sales, sales by outlet, sales by register, customer purchase analysis, daily sales summary, sales performance, inventory management, sales status closed, sales status open.'
Table	Create Table
vend_outlets	CREATE TABLE `vend_outlets` (\n  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each retail outlet in the system.',\n  `register_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the cash register used at a specific retail outlet.',\n  `name` varchar(100) NOT NULL COMMENT 'The name of the physical store location for inventory and sales tracking.',\n  `default_tax_id` varchar(100) DEFAULT NULL COMMENT 'Identifies the tax rate applied by default to sales at this outlet.',\n  `currency` varchar(100) DEFAULT NULL COMMENT 'The currency used for transactions at this outlet.',\n  `currency_symbol` varchar(100) DEFAULT NULL COMMENT 'Symbol used to represent the currency for transactions at this outlet.',\n  `display_prices` varchar(100) DEFAULT NULL COMMENT 'Indicates whether prices shown to customers include tax.',\n  `time_zone` varchar(100) DEFAULT NULL COMMENT 'Indicates the local time zone for scheduling and coordinating store operations.',\n  `physical_street_number` varchar(45) DEFAULT NULL COMMENT 'Stores the street number for the physical location of the vendor outlet.',\n  `physical_street` varchar(45) DEFAULT NULL COMMENT 'Street name for the outlet''s physical location.',\n  `physical_address_1` varchar(100) DEFAULT NULL COMMENT 'Stores the first line of the outlet''s physical address for location identification.',\n  `physical_address_2` varchar(100) DEFAULT NULL COMMENT 'Additional address details for a vendor outlet, such as a building or unit name.',\n  `physical_suburb` varchar(100) DEFAULT NULL COMMENT 'Identifies the suburb where the physical store is located for delivery and regional analysis.',\n  `physical_city` varchar(255) DEFAULT NULL,\n  `physical_postcode` varchar(100) DEFAULT NULL COMMENT 'The postcode for the physical location of the retail outlet.',\n  `physical_state` varchar(100) DEFAULT NULL COMMENT 'Indicates the region or province where the outlet is located for logistical and reporting purposes.',\n  `physical_country_id` varchar(100) DEFAULT NULL COMMENT 'Stores the country code where the physical outlet is located for business operations.',\n  `physical_phone_number` varchar(45) DEFAULT NULL COMMENT 'Contact number for reaching the physical store location.',\n  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the outlet was marked as inactive or removed from active use.',\n  `version` bigint(20) NOT NULL,\n  `turn_over_rate` float NOT NULL DEFAULT 5 COMMENT 'The rate at which inventory is sold and replaced at this outlet.',\n  `automatic_ordering` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet uses an automated system for placing stock orders.',\n  `facebook_page_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s Facebook page to manage social media presence and customer interactions.',\n  `gss_token` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for integrating Google services with the outlet.',\n  `google_page_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the store''s Google business page, used for managing online presence and reviews.',\n  `total_review_count` int(11) DEFAULT NULL COMMENT 'The total number of customer reviews received by this outlet.',\n  `google_review_rating` float(2,1) DEFAULT NULL COMMENT 'Average customer rating for the outlet based on Google reviews.',\n  `store_code` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for each store location used in operations and reporting.',\n  `magento_warehouse_id` int(11) DEFAULT NULL COMMENT 'Links each outlet to its corresponding warehouse in the Magento system.',\n  `google_link` varchar(100) DEFAULT NULL COMMENT 'URL for the store''s Google Maps location to assist with navigation and customer visits.',\n  `outlet_lat` varchar(45) DEFAULT NULL COMMENT 'Latitude coordinate for the outlet''s physical location.',\n  `outlet_long` varchar(45) DEFAULT NULL COMMENT 'Geographical longitude coordinate for the outlet''s location.',\n  `website_active` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet''s website is currently active for online sales.',\n  `website_outlet_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s online presence within the company''s website system.',\n  `deposit_card_id` int(11) DEFAULT NULL COMMENT 'Identifies the card used for deposits at this outlet for financial tracking.',\n  `vape_hq_shipping_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for tracking shipments from Vape HQ to this outlet.',\n  `banking_days_allocated` int(11) NOT NULL DEFAULT 7 COMMENT 'Number of days allocated for banking transactions at this outlet.',\n  `email` varchar(45) DEFAULT NULL COMMENT 'Email address for contacting the specific store location.',\n  `nz_post_api_key` varchar(45) DEFAULT NULL COMMENT 'API key for accessing New Zealand Post services for shipping and logistics.',\n  `nz_post_subscription_key` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for managing NZ Post subscription services for each outlet.',\n  `ip_address` varchar(45) DEFAULT NULL COMMENT 'Identifies the network location of the outlet for security and connectivity purposes.',\n  `deputy_location_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Links the outlet to its corresponding location in the Deputy workforce management system.',\n  `eftpos_merchant_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for processing card payments at this outlet.',\n  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),\n  `is_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the outlet functions as a warehouse (1 for yes, 0 for no).',\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `register_id_UNIQUE` (`register_id`),\n  UNIQUE KEY `magento_warehouse_id_UNIQUE` (`website_outlet_id`),\n  KEY `ix_vend_outlets_warehouse` (`is_warehouse`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all retail outlets for The Vape Shed, used to manage and track store-specific operations and sales data.  \\nTags: outlet locations, store management, sales by outlet, tax settings, currency settings, price display settings, store timezone settings'
Table	Create Table
cis_staff_vend_map	CREATE TABLE `cis_staff_vend_map` (\n  `xero_employee_id` char(36) NOT NULL,\n  `vend_customer_id` char(36) NOT NULL,\n  `email` varchar(255) DEFAULT NULL,\n  `first_name` varchar(100) DEFAULT NULL,\n  `last_name` varchar(100) DEFAULT NULL,\n  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),\n  PRIMARY KEY (`xero_employee_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci
Table	Create Table
xero_payroll_deductions	CREATE TABLE `xero_payroll_deductions` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `payroll_id` int(10) unsigned NOT NULL COMMENT 'FK to xero_payrolls',\n  `xero_employee_id` varchar(100) NOT NULL COMMENT 'Xero employee ID',\n  `employee_name` varchar(255) NOT NULL,\n  `user_id` int(10) unsigned DEFAULT NULL COMMENT 'FK to staff users table (if mapped)',\n  `vend_customer_id` varchar(100) DEFAULT NULL COMMENT 'Vend customer ID (if mapped)',\n  `deduction_type` varchar(100) NOT NULL COMMENT 'e.g., Staff Account, Staff Purchase',\n  `deduction_code` varchar(50) DEFAULT NULL COMMENT 'Xero deduction code',\n  `amount` decimal(10,2) NOT NULL DEFAULT 0.00 COMMENT 'Deduction amount from payslip',\n  `description` text DEFAULT NULL,\n  `vend_payment_id` varchar(100) DEFAULT NULL COMMENT 'Vend payment ID after allocation',\n  `allocated_amount` decimal(10,2) DEFAULT 0.00 COMMENT 'Amount successfully allocated to Vend',\n  `allocation_status` enum('pending','allocated','failed','partial') DEFAULT 'pending',\n  `allocated_at` datetime DEFAULT NULL COMMENT 'When payment was allocated to Vend',\n  `allocation_error` text DEFAULT NULL COMMENT 'Error message if allocation failed',\n  `created_at` datetime DEFAULT current_timestamp(),\n  `updated_at` datetime DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`id`),\n  KEY `idx_employee` (`xero_employee_id`),\n  KEY `idx_user_vend` (`user_id`,`vend_customer_id`),\n  KEY `idx_allocation_status` (`allocation_status`),\n  KEY `idx_payroll_employee` (`payroll_id`,`xero_employee_id`),\n  CONSTRAINT `xero_payroll_deductions_ibfk_1` FOREIGN KEY (`payroll_id`) REFERENCES `xero_payrolls` (`id`) ON DELETE CASCADE\n) ENGINE=InnoDB AUTO_INCREMENT=249 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Staff account deductions from Xero payrolls'
Table	Create Table
xero_payrolls	CREATE TABLE `xero_payrolls` (\n  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `xero_payroll_id` varchar(100) NOT NULL COMMENT 'Xero API payroll ID',\n  `pay_period_start` date NOT NULL,\n  `pay_period_end` date NOT NULL,\n  `payment_date` date NOT NULL,\n  `total_gross_pay` decimal(10,2) DEFAULT 0.00,\n  `total_deductions` decimal(10,2) DEFAULT 0.00,\n  `employee_count` int(10) unsigned DEFAULT 0,\n  `status` enum('draft','posted','processed') DEFAULT 'draft',\n  `raw_data` longtext DEFAULT NULL COMMENT 'Full JSON response from Xero API',\n  `cached_at` datetime NOT NULL COMMENT 'When this payroll was cached',\n  `is_cached` tinyint(1) DEFAULT 0 COMMENT '1 if > 7 days old and cached',\n  `created_at` datetime DEFAULT current_timestamp(),\n  `updated_at` datetime DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`id`),\n  UNIQUE KEY `uk_xero_payroll_id` (`xero_payroll_id`),\n  KEY `idx_payment_date` (`payment_date`),\n  KEY `idx_cached` (`is_cached`,`cached_at`),\n  KEY `idx_pay_period` (`pay_period_start`,`pay_period_end`)\n) ENGINE=InnoDB AUTO_INCREMENT=69 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Xero payroll runs'
Table	Create Table
staff_reminder_log	CREATE TABLE `staff_reminder_log` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL,\n  `reminder_type` enum('email','sms','push','in_app') NOT NULL,\n  `subject` varchar(255) NOT NULL,\n  `message` text NOT NULL,\n  `sent_by` int(11) NOT NULL,\n  `sent_at` datetime DEFAULT current_timestamp(),\n  `status` enum('sent','failed','pending') DEFAULT 'sent',\n  PRIMARY KEY (`id`),\n  KEY `idx_user_id` (`user_id`),\n  KEY `idx_sent_at` (`sent_at`),\n  KEY `idx_sent_by` (`sent_by`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
Table	Create Table
staff_preferences	CREATE TABLE `staff_preferences` (\n  `staff_id` varchar(50) NOT NULL,\n  `preferred_modes` longtext DEFAULT NULL CHECK (json_valid(`preferred_modes`)),\n  `challenge_types` longtext DEFAULT NULL CHECK (json_valid(`challenge_types`)),\n  `difficulty_preference` enum('easy','medium','hard') DEFAULT 'medium',\n  `notification_frequency` enum('daily','weekly','never') DEFAULT 'weekly',\n  `gamification_enabled` tinyint(1) DEFAULT 1,\n  `last_updated` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),\n  PRIMARY KEY (`staff_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
