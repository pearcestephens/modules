name: Consignments Tests

on:
  push:
    branches: [ main, develop, payroll-hardening-* ]
    paths:
      - 'consignments/**'
      - '.github/workflows/consignments-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'consignments/**'

jobs:
  test:
    name: PHP ${{ matrix.php-version }} Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_consignments
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_mysql, mbstring, json, curl
          coverage: xdebug
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: ./consignments
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Setup test database
        working-directory: ./consignments
        run: |
          mysql -h 127.0.0.1 -u root -proot test_consignments < database/schema.sql || true
          mysql -h 127.0.0.1 -u root -proot test_consignments < database/o6-queue-infrastructure.sql || true
          mysql -h 127.0.0.1 -u root -proot test_consignments < database/o7-webhook-infrastructure.sql || true
          mysql -h 127.0.0.1 -u root -proot test_consignments < database/09-receiving-evidence.sql || true
          mysql -h 127.0.0.1 -u root -proot test_consignments < database/10-freight-bookings.sql || true

      - name: Create .env file
        working-directory: ./consignments
        run: |
          cp .env.example .env || echo "LS_WEBHOOK_SECRET=test_secret_key_12345" > .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_NAME=test_consignments" >> .env
          echo "DB_USER=root" >> .env
          echo "DB_PASS=root" >> .env

      - name: Run PHPUnit Tests
        working-directory: ./consignments
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./consignments/coverage.xml
          flags: php-${{ matrix.php-version }}
          name: PHP ${{ matrix.php-version }}

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: pdo, pdo_mysql, mbstring, json
          tools: composer:v2, phpcs, phpstan

      - name: Install dependencies
        working-directory: ./consignments
        run: composer install --prefer-dist --no-progress

      - name: Run PHPCS (PSR-12)
        working-directory: ./consignments
        run: vendor/bin/phpcs --standard=PSR12 app/ infra/ bin/ --ignore=vendor

      - name: Run PHPStan (Level 8)
        working-directory: ./consignments
        run: vendor/bin/phpstan analyze app/ infra/ bin/ --level=8 --no-progress

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2

      - name: Install dependencies
        working-directory: ./consignments
        run: composer install --prefer-dist --no-progress

      - name: Run security audit
        working-directory: ./consignments
        run: composer audit || true

      - name: Check for hardcoded secrets
        working-directory: ./consignments
        run: |
          ! grep -r "password.*=.*['\"]" app/ infra/ bin/ --include="*.php" || (echo "Found hardcoded passwords!" && exit 1)
          ! grep -r "secret.*=.*['\"]" app/ infra/ bin/ --include="*.php" || (echo "Found hardcoded secrets!" && exit 1)
