name: Consignments Bot Heartbeat
on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

permissions:
  issues: write
  contents: read
  pull-requests: read

env:
  # Set this to the tracking issue number after you create it (Step 2)
  TRACK_ISSUE_NUMBER: "1"
  PATHS_WATCH: "consignments/**"

jobs:
  heartbeat:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Summarize last 15m activity
        id: summary
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const since = new Date(Date.now() - 15*60*1000).toISOString();

            // Recent PRs touching consignments/*
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'open' });
            const touching = [];
            for (const pr of prs) {
              const files = await github.paginate(github.rest.pulls.listFiles, { owner, repo, pull_number: pr.number });
              if (files.some(f => f.filename.startsWith(process.env.PATHS_WATCH.replace('/**','/')))) {
                touching.push({number: pr.number, title: pr.title, labels: pr.labels.map(l=>l.name)});
              }
            }

            // Recent commits in consignments/*
            const commits = await github.paginate(github.rest.repos.listCommits, {
              owner, repo, path: process.env.PATHS_WATCH.replace('/**',''), per_page: 50, since
            });

            const lines = [];
            lines.push(`**Heartbeat ${new Date().toLocaleString()}**`);
            lines.push(`• PRs touching consignments/: ${touching.length}`);
            for (const pr of touching) {
              lines.push(`  - #${pr.number} ${pr.title} [${pr.labels.join(', ')}]`);
            }
            lines.push(`• Commits in last 15m: ${commits.length}`);
            core.setOutput('body', lines.join('\n'));

      - name: Post to tracking issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = Number(process.env.TRACK_ISSUE_NUMBER);
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number,
              body: `${{ steps.summary.outputs.body }}`
            });
