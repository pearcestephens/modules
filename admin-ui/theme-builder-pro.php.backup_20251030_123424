<?php
/**
 * Theme Builder PRO - Professional Visual Theme Editor
 * Complete HTML/CSS editor with AI assistance, versioning, and multi-theme support
 *
 * @package CIS\Modules\AdminUI
 * @version 2.0.0
 */

require_once $_SERVER['DOCUMENT_ROOT'] . '/modules/base/bootstrap.php';

// Set page variables for breadcrumbs
$pageParent = 'Admin UI';
$pageTitle = 'Theme Builder PRO';

// Define paths
define('ADMIN_UI_PATH', __DIR__);
define('TEMPLATES_PATH', ADMIN_UI_PATH . '/_templates');
define('THEMES_PATH', ADMIN_UI_PATH . '/themes');
define('COMPONENTS_PATH', TEMPLATES_PATH . '/components');

// Ensure themes directory exists
if (!is_dir(THEMES_PATH)) {
    mkdir(THEMES_PATH, 0755, true);
}

// Handle AJAX requests
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action'])) {
    header('Content-Type: application/json');

    switch ($_POST['action']) {
        case 'save_theme':
            $theme = json_decode($_POST['theme_data'], true);
            $themeId = $theme['id'] ?? 'theme_' . time();
            $theme['modified'] = date('Y-m-d H:i:s');
            $theme['version'] = $theme['version'] ?? '1.0.0';
            $file = THEMES_PATH . "/{$themeId}.json";
            file_put_contents($file, json_encode($theme, JSON_PRETTY_PRINT));
            echo json_encode(['success' => true, 'theme_id' => $themeId]);
            exit;

        case 'list_themes':
            $themes = [];
            $files = glob(THEMES_PATH . '/*.json');
            foreach ($files as $file) {
                $data = json_decode(file_get_contents($file), true);
                $themes[] = [
                    'id' => basename($file, '.json'),
                    'name' => $data['name'] ?? 'Unnamed',
                    'version' => $data['version'] ?? '1.0.0',
                    'modified' => date('Y-m-d H:i:s', filemtime($file))
                ];
            }
            echo json_encode(['success' => true, 'themes' => $themes]);
            exit;
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Theme Builder PRO - CIS</title>

    <!-- Monaco Editor -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.44.0/min/vs/editor/editor.main.min.css">

    <!-- Bootstrap (for buttons) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            overflow: hidden;
            background: #1e1e1e;
        }

    /* Full Screen Theme Builder Container */
    .theme-builder-container {
        display: flex;
        height: 100vh;
        width: 100vw;
        background: #0a0f1e;
        color: #e2e8f0;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    /* Editor Panel - Left - Sleek Dark */
    .editor-panel {
        width: 50%;
        display: flex;
        flex-direction: column;
        background: #141b2d;
        border-right: 1px solid rgba(59, 130, 246, 0.2);
    }

    .editor-tabs {
        display: flex;
        background: #0f1419;
        border-bottom: 1px solid rgba(59, 130, 246, 0.2);
        padding: 0.5rem 1rem;
        gap: 0.5rem;
    }

    .editor-tab {
        padding: 0.5rem 1rem;
        background: rgba(30, 58, 138, 0.3);
        border: 1px solid rgba(59, 130, 246, 0.2);
        color: #94a3b8;
        cursor: pointer;
        border-radius: 6px;
        transition: all 0.2s;
        font-weight: 500;
        font-size: 0.8125rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .editor-tab:hover {
        background: rgba(30, 58, 138, 0.5);
        color: #e2e8f0;
        border-color: rgba(59, 130, 246, 0.4);
        transform: translateY(-1px);
    }

    .editor-tab.active {
        background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
        color: white;
        border-color: transparent;
        box-shadow: 0 2px 8px rgba(59, 130, 246, 0.3);
    }

    .editor-container {
        flex: 1;
        position: relative;
        overflow: hidden;
    }

    .editor-wrapper {
        display: none;
        height: 100%;
        width: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }

    .editor-wrapper.active {
        display: block;
    }

    #htmlEditor, #cssEditor, #jsEditor {
        width: 100%;
        height: 100%;
    }

    /* Preview Panel - Right - Clean */
    .preview-panel {
        flex: 1;
        display: flex;
        flex-direction: column;
        background: #0a0f1e;
    }

    .preview-toolbar {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.75rem 1.5rem;
        background: #141b2d;
        border-bottom: 1px solid rgba(59, 130, 246, 0.2);
        gap: 1rem;
    }

    .preview-toolbar-group {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }

    .toolbar-btn {
        padding: 0.625rem 1.25rem;
        background: #1e293b;
        border: 1px solid #334155;
        color: #e2e8f0;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 0.875rem;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .toolbar-btn:hover {
        background: #334155;
        border-color: #475569;
        transform: translateY(-1px);
    }

    .toolbar-btn.active {
        background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
        border-color: #8B5CF6;
        color: white;
    }

    #previewFrame {
        flex: 1;
        border: none;
        background: white;
        width: 100%;
    }

    /* Slideout Panels */
    .slideout-panel {
        position: fixed;
        top: 0;
        right: -420px;
        width: 420px;
        height: 100vh;
        background: #1e293b;
        box-shadow: -8px 0 32px rgba(0,0,0,0.4);
        transition: right 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        z-index: 10000;
        overflow-y: auto;
    }

    .slideout-panel.open {
        right: 0;
    }

    .slideout-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1.25rem 1.5rem;
        background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
        position: sticky;
        top: 0;
        z-index: 10;
    }

    .slideout-header h4 {
        margin: 0;
        color: white;
        font-size: 1.125rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .slideout-close {
        background: rgba(255,255,255,0.2);
        border: none;
        color: white;
        font-size: 1.25rem;
        cursor: pointer;
        transition: all 0.2s;
        width: 32px;
        height: 32px;
        border-radius: 6px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .slideout-close:hover {
        background: rgba(255,255,255,0.3);
    }

    .slideout-content {
        padding: 1.5rem;
    }

    .control-group {
        margin-bottom: 1.75rem;
    }

    .control-group label {
        display: block;
        color: #cbd5e1;
        font-size: 0.8125rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .color-picker-wrapper {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }

    .color-picker-wrapper input[type="color"] {
        width: 56px;
        height: 56px;
        border: 2px solid #334155;
        border-radius: 10px;
        cursor: pointer;
        transition: border-color 0.2s;
    }

    .color-picker-wrapper input[type="color"]:hover {
        border-color: #8B5CF6;
    }

    .color-picker-wrapper input[type="text"] {
        flex: 1;
        padding: 0.875rem 1rem;
        background: #0f172a;
        border: 1px solid #334155;
        color: #e2e8f0;
        border-radius: 8px;
        font-family: 'Courier New', monospace;
        font-size: 0.9375rem;
        transition: border-color 0.2s;
    }

    .color-picker-wrapper input[type="text"]:focus {
        outline: none;
        border-color: #8B5CF6;
    }

    /* AI Chat Overlay */
    .ai-chat-overlay {
        position: fixed;
        bottom: 30px;
        right: 30px;
        width: 420px;
        height: 600px;
        background: #1e293b;
        border-radius: 20px;
        box-shadow: 0 24px 64px rgba(0,0,0,0.5);
        display: none;
        flex-direction: column;
        z-index: 10001;
    }

    .ai-chat-overlay.open {
        display: flex;
        animation: slideUp 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    @keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .ai-chat-header {
        padding: 1.25rem 1.5rem;
        background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
        color: white;
        border-radius: 20px 20px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .ai-chat-header h5 {
        margin: 0;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .ai-chat-messages {
        flex: 1;
        overflow-y: auto;
        padding: 1.25rem;
        background: #0f172a;
    }

    .ai-message {
        margin-bottom: 1rem;
        display: flex;
        gap: 0.75rem;
        animation: fadeIn 0.3s ease;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .ai-message.user {
        flex-direction: row-reverse;
    }

    .ai-message-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        font-size: 1.125rem;
    }

    .ai-message.bot .ai-message-avatar {
        background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
        color: white;
    }

    .ai-message.user .ai-message-avatar {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
    }

    .ai-message-content {
        flex: 1;
        padding: 0.875rem 1.125rem;
        border-radius: 12px;
        background: #1e293b;
        color: #e2e8f0;
        line-height: 1.5;
    }

    .ai-chat-input {
        padding: 1.25rem 1.5rem;
        background: #1e293b;
        border-top: 1px solid #334155;
        border-radius: 0 0 20px 20px;
    }

    .ai-input-wrapper {
        display: flex;
        gap: 0.75rem;
    }

    .ai-input-wrapper input {
        flex: 1;
        padding: 0.875rem 1.125rem;
        background: #0f172a;
        border: 1px solid #334155;
        color: #e2e8f0;
        border-radius: 10px;
        font-size: 0.9375rem;
        transition: border-color 0.2s;
    }

    .ai-input-wrapper input:focus {
        outline: none;
        border-color: #8B5CF6;
    }

    .ai-send-btn {
        padding: 0.875rem 1.5rem;
        background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%);
        border: none;
        color: white;
        border-radius: 10px;
        cursor: pointer;
        font-weight: 600;
        transition: transform 0.2s;
    }

    .ai-send-btn:hover {
        transform: translateY(-2px);
    }

    /* Floating Action Buttons - Bottom Left */
    .fab-container {
        position: fixed;
        bottom: 30px;
        left: 30px;
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        z-index: 9999;
    }

    .fab {
        width: 56px;
        height: 56px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        border: none;
        cursor: pointer;
        box-shadow: 0 4px 16px rgba(0,0,0,0.3);
        transition: all 0.2s;
        font-size: 1.25rem;
    }

    .fab:hover {
        transform: scale(1.1) translateY(-2px);
        box-shadow: 0 8px 24px rgba(0,0,0,0.4);
    }

    .fab-primary { background: linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%); }
    .fab-success { background: linear-gradient(135deg, #10b981 0%, #059669 100%); }
    .fab-warning { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); }
    .fab-info { background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%); }

    /* Theme Selector */
    .theme-selector {
        padding: 0.625rem 1rem;
        background: #1e293b;
        border: 1px solid #334155;
        color: #e2e8f0;
        border-radius: 8px;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s;
    }

    .theme-selector:hover {
        border-color: #8B5CF6;
    }

    .theme-selector:focus {
        outline: none;
        border-color: #8B5CF6;
    }

    /* Top Bar - Sleek Dark Blue */
    .theme-builder-topbar {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 56px;
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
        border-bottom: 1px solid rgba(59, 130, 246, 0.3);
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 2rem;
        z-index: 1000;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }

    .topbar-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #ffffff;
        display: flex;
        align-items: center;
        gap: 0.625rem;
        letter-spacing: 0.3px;
    }

    .topbar-title i {
        color: #60a5fa;
        font-size: 1.25rem;
    }

    .topbar-actions {
        display: flex;
        gap: 1rem;
    }

    .theme-builder-container {
        margin-top: 56px;
        height: calc(100vh - 56px);
    }

    .topbar-actions .btn {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        border-radius: 8px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.1);
        color: white;
        transition: all 0.2s;
    }

    .topbar-actions .btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
        transform: translateY(-1px);
    }
</style>

</head>
<body>

<!-- Top Bar -->
<div class="theme-builder-topbar">
    <div class="topbar-title">
        <i class="fas fa-palette"></i>
        Theme Builder PRO
    </div>
    <div class="topbar-actions">
        <button class="btn btn-sm btn-outline-light" onclick="window.location.href='index.php'">
            <i class="fas fa-arrow-left"></i> Back to Admin UI
        </button>
    </div>
</div>

<!-- Theme Builder PRO Interface -->
<div class="theme-builder-container">
    <!-- Editor Panel - Left -->
    <div class="editor-panel">
        <div class="editor-tabs">
            <button class="editor-tab active" data-editor="html">
                <i class="fab fa-html5"></i> HTML
            </button>
            <button class="editor-tab" data-editor="css">
                <i class="fab fa-css3-alt"></i> CSS
            </button>
            <button class="editor-tab" data-editor="js">
                <i class="fab fa-js"></i> JavaScript
            </button>
        </div>

        <div class="editor-container">
            <div class="editor-wrapper active" data-editor="html">
                <div id="htmlEditor"></div>
            </div>
            <div class="editor-wrapper" data-editor="css">
                <div id="cssEditor"></div>
            </div>
            <div class="editor-wrapper" data-editor="js">
                <div id="jsEditor"></div>
            </div>
        </div>
    </div>

    <!-- Preview Panel - Right -->
    <div class="preview-panel">
        <div class="preview-toolbar">
            <div class="preview-toolbar-group">
                <button class="toolbar-btn active" data-view="desktop">
                    <i class="fas fa-desktop"></i> Desktop
                </button>
                <button class="toolbar-btn" data-view="tablet">
                    <i class="fas fa-tablet-alt"></i> Tablet
                </button>
                <button class="toolbar-btn" data-view="mobile">
                    <i class="fas fa-mobile-alt"></i> Mobile
                </button>
            </div>

            <div class="preview-toolbar-group">
                <select class="theme-selector" id="themeSelector">
                    <option value="default">Vape Shed Default</option>
                </select>

                <button class="toolbar-btn" id="refreshPreview">
                    <i class="fas fa-sync-alt"></i> Refresh
                </button>

                <button class="toolbar-btn" id="saveTheme">
                    <i class="fas fa-save"></i> Save Theme
                </button>
            </div>
        </div>

        <iframe id="previewFrame" src="/modules/admin-ui/template-showcase.php?demo=dashboard"></iframe>
    </div>
</div>

<!-- Floating Action Buttons -->
<div class="fab-container">
    <button class="fab fab-primary" id="fab-colors" title="Colors">
        <i class="fas fa-palette"></i>
    </button>
    <button class="fab fab-success" id="fab-typography" title="Typography">
        <i class="fas fa-font"></i>
    </button>
    <button class="fab fab-warning" id="fab-spacing" title="Spacing">
        <i class="fas fa-ruler-combined"></i>
    </button>
    <button class="fab fab-info" id="fab-ai" title="AI Assistant">
        <i class="fas fa-robot"></i>
    </button>
</div>

<!-- Slideout Panel - Colors -->
<div class="slideout-panel" id="panel-colors">
    <div class="slideout-header">
        <h4><i class="fas fa-palette"></i> Color Settings</h4>
        <button class="slideout-close"><i class="fas fa-times"></i></button>
    </div>
    <div class="slideout-content">
        <div class="control-group">
            <label>Primary Color</label>
            <div class="color-picker-wrapper">
                <input type="color" id="color-primary" value="#8B5CF6">
                <input type="text" id="color-primary-hex" value="#8B5CF6">
            </div>
        </div>

        <div class="control-group">
            <label>Success Color</label>
            <div class="color-picker-wrapper">
                <input type="color" id="color-success" value="#10b981">
                <input type="text" id="color-success-hex" value="#10b981">
            </div>
        </div>

        <div class="control-group">
            <label>Warning Color</label>
            <div class="color-picker-wrapper">
                <input type="color" id="color-warning" value="#f59e0b">
                <input type="text" id="color-warning-hex" value="#f59e0b">
            </div>
        </div>

        <div class="control-group">
            <label>Danger Color</label>
            <div class="color-picker-wrapper">
                <input type="color" id="color-danger" value="#ef4444">
                <input type="text" id="color-danger-hex" value="#ef4444">
            </div>
        </div>

        <button class="btn btn-primary btn-block mt-3">Apply Colors</button>
    </div>
</div>

<!-- Slideout Panel - Typography -->
<div class="slideout-panel" id="panel-typography">
    <div class="slideout-header">
        <h4><i class="fas fa-font"></i> Typography Settings</h4>
        <button class="slideout-close"><i class="fas fa-times"></i></button>
    </div>
    <div class="slideout-content">
        <div class="control-group">
            <label>Font Family</label>
            <select class="form-control" id="font-family">
                <option value="system-ui, -apple-system, sans-serif">System (Default)</option>
                <option value="'Inter', sans-serif">Inter</option>
                <option value="'Roboto', sans-serif">Roboto</option>
            </select>
        </div>

        <div class="control-group">
            <label>Base Font Size: <span id="font-size-display">16px</span></label>
            <input type="range" class="form-control-range" id="font-size" min="12" max="20" value="16">
        </div>

        <button class="btn btn-primary btn-block mt-3">Apply Typography</button>
    </div>
</div>

<!-- Slideout Panel - Spacing -->
<div class="slideout-panel" id="panel-spacing">
    <div class="slideout-header">
        <h4><i class="fas fa-ruler-combined"></i> Spacing Settings</h4>
        <button class="slideout-close"><i class="fas fa-times"></i></button>
    </div>
    <div class="slideout-content">
        <div class="control-group">
            <label>Base Padding: <span id="base-padding-display">1rem</span></label>
            <input type="range" class="form-control-range" id="base-padding" min="0.5" max="3" step="0.25" value="1">
        </div>

        <div class="control-group">
            <label>Border Radius: <span id="border-radius-display">6px</span></label>
            <input type="range" class="form-control-range" id="border-radius" min="0" max="24" value="6">
        </div>

        <button class="btn btn-primary btn-block mt-3">Apply Spacing</button>
    </div>
</div>

<!-- AI Chat Overlay -->
<div class="ai-chat-overlay" id="aiChatOverlay">
    <div class="ai-chat-header">
        <h5><i class="fas fa-robot"></i> AI Theme Assistant</h5>
        <button class="slideout-close" id="close-ai-chat"><i class="fas fa-times"></i></button>
    </div>
    <div class="ai-chat-messages" id="aiChatMessages">
        <div class="ai-message bot">
            <div class="ai-message-avatar"><i class="fas fa-robot"></i></div>
            <div class="ai-message-content">
                Hi! I'm your AI theme assistant. Try asking me to "change the primary color to blue" or "make the font bigger"!
            </div>
        </div>
    </div>
    <div class="ai-chat-input">
        <div class="ai-input-wrapper">
            <input type="text" id="aiInput" placeholder="Ask me to change anything...">
            <button class="ai-send-btn" id="aiSend">
                <i class="fas fa-paper-plane"></i>
            </button>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.44.0/min/vs/loader.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
// Initialize Monaco Editor
require.config({ paths: { vs: 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.44.0/min/vs' }});

let htmlEditor, cssEditor, jsEditor;

require(['vs/editor/editor.main'], function() {
    htmlEditor = monaco.editor.create(document.getElementById('htmlEditor'), {
        value: `<!-- Edit HTML here -->
<div class="container mt-4">
  <div class="card">
    <div class="card-body">
      <h1 class="card-title">Hello Theme Builder!</h1>
      <p class="card-text">Start editing to see changes in real-time.</p>
      <button class="btn btn-primary">Primary Button</button>
      <button class="btn btn-success">Success Button</button>
    </div>
  </div>
</div>`,
        language: 'html',
        theme: 'vs-dark',
        automaticLayout: true,
        fontSize: 14,
        minimap: { enabled: false }
    });

    cssEditor = monaco.editor.create(document.getElementById('cssEditor'), {
        value: `/* Edit CSS here */
:root {
  --custom-primary: #8B5CF6;
  --custom-spacing: 1rem;
}

.card {
  border-radius: 12px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.btn-primary {
  background: var(--custom-primary);
  border-color: var(--custom-primary);
}`,
        language: 'css',
        theme: 'vs-dark',
        automaticLayout: true,
        fontSize: 14,
        minimap: { enabled: false }
    });

    jsEditor = monaco.editor.create(document.getElementById('jsEditor'), {
        value: `// Edit JavaScript here
console.log('Theme Builder PRO loaded');

// Add interactivity here
document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM ready');
});`,
        language: 'javascript',
        theme: 'vs-dark',
        automaticLayout: true,
        fontSize: 14,
        minimap: { enabled: false }
    });

    // Auto-refresh on change
    let refreshTimeout;
    [htmlEditor, cssEditor, jsEditor].forEach(editor => {
        editor.onDidChangeModelContent(() => {
            clearTimeout(refreshTimeout);
            refreshTimeout = setTimeout(refreshPreview, 1000);
        });
    });
});

// Editor tab switching
document.querySelectorAll('.editor-tab').forEach(tab => {
    tab.addEventListener('click', () => {
        const editor = tab.dataset.editor;
        document.querySelectorAll('.editor-tab').forEach(t => t.classList.remove('active'));
        document.querySelectorAll('.editor-wrapper').forEach(w => w.classList.remove('active'));
        tab.classList.add('active');
        document.querySelector(`.editor-wrapper[data-editor="${editor}"]`).classList.add('active');
    });
});

// FAB handlers
document.getElementById('fab-colors').addEventListener('click', () => {
    closeAllPanels();
    document.getElementById('panel-colors').classList.add('open');
});

document.getElementById('fab-typography').addEventListener('click', () => {
    closeAllPanels();
    document.getElementById('panel-typography').classList.add('open');
});

document.getElementById('fab-spacing').addEventListener('click', () => {
    closeAllPanels();
    document.getElementById('panel-spacing').classList.add('open');
});

document.getElementById('fab-ai').addEventListener('click', () => {
    closeAllPanels();
    document.getElementById('aiChatOverlay').classList.add('open');
});

// Close panels
document.querySelectorAll('.slideout-close').forEach(btn => {
    btn.addEventListener('click', closeAllPanels);
});

function closeAllPanels() {
    document.querySelectorAll('.slideout-panel, .ai-chat-overlay').forEach(panel => {
        panel.classList.remove('open');
    });
}

// Refresh preview
function refreshPreview() {
    const frame = document.getElementById('previewFrame');
    const html = htmlEditor.getValue();
    const css = cssEditor.getValue();
    const js = jsEditor.getValue();

    const doc = frame.contentDocument || frame.contentWindow.document;
    doc.open();
    doc.write(`
        <!DOCTYPE html>
        <html>
        <head>
            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
            <link rel="stylesheet" href="/modules/admin-ui/_templates/css/theme-generated.css">
            <style>${css}</style>
        </head>
        <body>
            ${html}
            <script>${js}<\/script>
        </body>
        </html>
    `);
    doc.close();
}

document.getElementById('refreshPreview').addEventListener('click', refreshPreview);

// Save theme
document.getElementById('saveTheme').addEventListener('click', async () => {
    const themeName = prompt('Theme name:', 'My Custom Theme');
    if (!themeName) return;

    const theme = {
        id: 'custom_' + Date.now(),
        name: themeName,
        html: htmlEditor.getValue(),
        css: cssEditor.getValue(),
        js: jsEditor.getValue(),
        colors: {
            primary: document.getElementById('color-primary').value,
            success: document.getElementById('color-success').value,
            warning: document.getElementById('color-warning').value,
            danger: document.getElementById('color-danger').value
        }
    };

    const formData = new FormData();
    formData.append('action', 'save_theme');
    formData.append('theme_data', JSON.stringify(theme));

    const response = await fetch('', { method: 'POST', body: formData });
    const result = await response.json();

    if (result.success) {
        alert('✅ Theme saved successfully!');
        loadThemes();
    } else {
        alert('❌ Error saving theme');
    }
});

// Load themes
async function loadThemes() {
    const formData = new FormData();
    formData.append('action', 'list_themes');

    const response = await fetch('', { method: 'POST', body: formData });
    const result = await response.json();

    if (result.success) {
        const selector = document.getElementById('themeSelector');
        selector.innerHTML = '<option value="default">Vape Shed Default</option>';
        result.themes.forEach(theme => {
            const option = document.createElement('option');
            option.value = theme.id;
            option.textContent = `${theme.name} (v${theme.version})`;
            selector.appendChild(option);
        });
    }
}

// AI Chat
document.getElementById('aiSend').addEventListener('click', sendAIMessage);
document.getElementById('aiInput').addEventListener('keypress', (e) => {
    if (e.key === 'Enter') sendAIMessage();
});

function sendAIMessage() {
    const input = document.getElementById('aiInput');
    const message = input.value.trim();
    if (!message) return;

    const messagesDiv = document.getElementById('aiChatMessages');
    messagesDiv.innerHTML += `
        <div class="ai-message user">
            <div class="ai-message-avatar"><i class="fas fa-user"></i></div>
            <div class="ai-message-content">${message}</div>
        </div>
    `;

    // Simple AI response
    setTimeout(() => {
        let response = 'I understand you want to "' + message + '". Let me help with that!';

        // Pattern matching for common requests
        if (message.toLowerCase().includes('primary') && message.toLowerCase().includes('color')) {
            response = 'I can help you change the primary color. Try using the color picker in the Colors panel on the left!';
        } else if (message.toLowerCase().includes('font') && message.toLowerCase().includes('bigger')) {
            response = 'To make the font bigger, use the Typography panel (green button) and adjust the font size slider.';
        } else if (message.toLowerCase().includes('save')) {
            response = 'Click the "Save Theme" button in the toolbar above to save your current theme!';
        }

        messagesDiv.innerHTML += `
            <div class="ai-message bot">
                <div class="ai-message-avatar"><i class="fas fa-robot"></i></div>
                <div class="ai-message-content">${response}</div>
            </div>
        `;
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }, 500);

    input.value = '';
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

// Range input displays
document.getElementById('font-size').addEventListener('input', (e) => {
    document.getElementById('font-size-display').textContent = e.target.value + 'px';
});

document.getElementById('base-padding').addEventListener('input', (e) => {
    document.getElementById('base-padding-display').textContent = e.target.value + 'rem';
});

document.getElementById('border-radius').addEventListener('input', (e) => {
    document.getElementById('border-radius-display').textContent = e.target.value + 'px';
});

// Color picker sync
document.querySelectorAll('input[type="color"]').forEach(picker => {
    picker.addEventListener('input', (e) => {
        const hexInput = document.getElementById(e.target.id + '-hex');
        if (hexInput) hexInput.value = e.target.value;
    });
});

document.querySelectorAll('.color-picker-wrapper input[type="text"]').forEach(input => {
    input.addEventListener('input', (e) => {
        const colorId = e.target.id.replace('-hex', '');
        const colorPicker = document.getElementById(colorId);
        if (colorPicker && /^#[0-9A-F]{6}$/i.test(e.target.value)) {
            colorPicker.value = e.target.value;
        }
    });
});

// Load themes on page load
loadThemes();

// Initial preview refresh
setTimeout(refreshPreview, 500);
</script>


});
</script>

</body>
</html>
